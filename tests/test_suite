#!/bin/sh

. lib/functions

mount_unmount()
{
    echo "mounting then demounting"
    init local
    mount local
    debug_interrupt
    unmount local
    clean
}

fuse()
{
    echo "running tests from fuse"
    init local
    mount local
    assert_success fuse_tester $PWD/sandbox/local/mnt
    debug_interrupt
    unmount local
    clean
}

sync_simple()
{
    echo "simple synchronization"
    init local
    init remote
    mount local
    mount remote
    make_peers local remote
    echo "test" >> sandbox/local/mnt/test_file
    echo "pull remote" > sandbox/local/mnt/.command
    # after sync, the file must exist
    assert_success test -e test/remote/mnt/test_file
    # but diffing should fail because it is recorded as size 0
    assert_fail diff test/local/mnt/test_file test/remote/mnt/test_file
    # diffing should work the second time (opened by the first diff, so it
    # has been downloaded)
    assert_success diff test/local/mnt/test_file test/remote/mnt/test_file
    debug_interrupt
    unmount local
    unmount remote
    clean
}

sync_normal_conflict()
{
    echo "synchronization with normal conflict"
    init local
    init remote
    mount local
    mount remote
    make_peers local remote
    echo "test_line" >> test/local/mnt/test_file
    ./sharebox.py -c sync test/remote/mnt
    assert_success test -e test/remote/mnt/test_file
    touch test/remote/mnt/test_file
    echo "test_line_local" >> test/local/mnt/test_file
    echo "test_line_remote" >> test/remote/mnt/test_file
    ./sharebox.py -c sync test/remote/mnt
    # but diffing should fail
    assert_fail diff test/local/mnt/test_file test/remote/mnt/test_file
    debug_interrupt
    unmount local
    unmount remote
    clean
}

sync_delete_conflict()
{
    echo "synchronization with delete conflict"
    init local
    init remote
    mount local
    mount remote
    make_peers local remote
    echo "test_line" >> test/local/mnt/test_file
    ./sharebox.py -c sync test/remote/mnt
    assert_success test -e test/remote/mnt/test_file
    touch test/remote/mnt/test_file
    echo "test_line_remote" >> test/remote/mnt/test_file
    rm test/local/mnt/test_file
    ./sharebox.py -c sync test/remote/mnt
    # diffing should fail
    assert_fail diff test/local/mnt/test_file test/remote/mnt/test_file
    debug_interrupt
    unmount local
    unmount remote
    clean
}

mount_unmount
fuse
